function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}function TopBtn(){this.topBtn=$("#myBtn")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},TopBtn.prototype.run=function(){this.listenScroll()},TopBtn.prototype.listenScroll=function(){var t=this;window.scroll(function(){t.scrollFunction()})},TopBtn.prototype.scrollFunction=function(){20<document.body.scrollTop||20<document.documentElement.scrollTop?this.topBtn.style.display="block":this.topBtn.style.display="none"},TopBtn.prototype.listenTopBtn=function(){this.topBtn.click(function(){document.body.scrollTop=0,document.documentElement.scrollTop=0})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent(),t.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("Send email success!"),t.smsCaptcha.addClass("disabled");var n=30;t.smsCaptcha.unbind("click");var e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("Send Code"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),o=$(".close-btn");$(".scroll-wrapper");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),o.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,t=$(".sms-captcha-btn"),e=$(".signup-group input[name='email']");t.click(function(){var t=e.val();t?plpajax.get({url:"/account/sms_captcha",data:{email:t},success:function(t){200==t.code&&n.smsSuccessEvent()},fail:function(t){console.log(t)}}):messageBox.showInfo("Please input your email address!")})},Auth.prototype.listenSigninEvent=function(){var o=this,t=$(".signin-group"),s=t.find("input[name='email']"),a=t.find("input[name='password']"),i=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=s.val(),n=a.val(),e=i.prop("checked");plpajax.post({url:"/account/login/",data:{email:t,password:n,remember:e?1:0},success:function(t){o.hideEvent(),window.location.reload()}})})},Auth.prototype.listenSignupEvent=function(){var h=$(".signup-group");h.find(".submit-btn").click(function(t){t.preventDefault(),console.log("man!");var n=h.find("input[name='email']"),e=h.find("input[name='username']"),o=h.find("input[name='img_captcha']"),s=h.find("input[name='password1']"),a=h.find("input[name='password2']"),i=h.find("input[name='sms_captcha']"),c=n.val(),r=e.val(),p=o.val(),u=s.val(),l=a.val(),m=i.val();console.log("dude"),plpajax.post({url:"/account/register/",data:{email:c,username:r,img_captcha:p,password1:u,password2:l,sms_captcha:m},success:function(t){200==t.code&&window.location.reload()}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){(new TopBtn).run()}),$(function(){template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),o=((new Date).getTime()-e)/1e3;if(o<60)return"Just Now";if(60<=o&&o<3600)return minutes=parseInt(o/60),minutes+" Minutes";if(3600<=o&&o<86400)return hours=parseInt(o/60/60),hours+" Hours";if(86400<=o&&o<2592e3)return days=parseInt(o/60/60/24),days+" Days";var s=n.getFullYear(),a=n.getMonth(),i=n.getDay();return n.getHours()+":"+n.getMinutes()+" "+i+"/"+a+"/"+s})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
